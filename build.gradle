buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.1'
    }
}

apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'

group = 'net.zomis'
version = '0.1.0-SNAPSHOT'

description = "Home-made Machine Learning"

sourceCompatibility = 1.8
targetCompatibility = 1.8

mainClassName = 'net.zomis.machlearn.main.MachineLearning'

repositories {
    mavenCentral()
    maven { url "http://www.zomis.net/maven" }
}

configurations {
    deployerJars
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version:'2.4.3'
    compile 'org.imgscalr:imgscalr-lib:4.2'
    compile 'org.jsoup:jsoup:1.6.1'
    compile 'org.apache.commons:commons-math3:3.5'
    compile 'org.deeplearning4j:deeplearning4j-core:0.6.0'
    compile 'org.nd4j:nd4j-native-platform:0.6.0'
    compile 'org.datavec:datavec-api:0.6.0'
    compile 'net.zomis:mine-analyze:1.1-SNAPSHOT'
	compile 'org.jblas:jblas:1.2.3'
	compile 'net.tuis.ubench:ubench:0.2.0'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

def getMavenSettingsCredentials() {
    String userHome = System.getProperty('user.home')
    File mavenSettings = new File(userHome, '.m2/settings.xml')
    if (!mavenSettings.exists()) {
        return []
    }
    def xmlSlurper = new XmlSlurper()
    def output = xmlSlurper.parse(mavenSettings)
    return output."servers"."server"
}

def getCredentials() {
    def entries = getMavenSettingsCredentials()
    for (entry in entries) {
        if (entry."id".text() == 'zomisnet') {
            return [username: entry.username.text(), password: entry.password.text()]
        }
    }
    return [username: 'invalid', password: 'invalid']
}

uploadArchives {
    def creds = getCredentials()
    if (!creds) {
        return;
    }
    repositories {
        mavenDeployer {
            configuration = configurations.deployerJars
            repository(url: "ftp://www.zomis.net/public_html/maven") {
                authentication(userName: creds["username"], password: creds["password"])
            }
        }
    }
}
